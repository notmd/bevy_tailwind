---
source: macros/tests/runner/src/lib.rs
expression: stdout
---
#![feature(prelude_import)]
#![allow(dead_code)]
#![allow(unused_variables)]
#[prelude_import]
use std::prelude::rust_2021::*;
#[macro_use]
extern crate std;
use bevy::prelude::*;
use bevy_tailwind::tw;
fn simple(mut query: Query<EntityMut>) {
    let mut entity = query.single_mut();
    {
        (bevy::ui::Node {
            display: bevy::ui::Display::Flex,
            ..Default::default()
        })
    };
    {
        let mut __entity = &mut entity;
        if let Some(mut __comp) = __entity.get_mut::<bevy::ui::Node>() {
            __comp.display = bevy::ui::Display::Flex;
        }
        __entity
    };
    {
        let __class__cond_0 = true;
        (bevy::ui::Node {
            display: if __class__cond_0 {
                bevy::ui::Display::Flex
            } else {
                bevy::ui::Display::Block
            },
            ..Default::default()
        })
    };
    {
        let mut __entity = &mut entity;
        let __class__cond_0 = true;
        if let Some(mut __comp) = __entity.get_mut::<bevy::ui::Node>() {
            if __class__cond_0 {
                __comp.display = bevy::ui::Display::Flex;
            } else {
                __comp.display = bevy::ui::Display::Block;
            }
        }
        __entity
    };
    {
        let mut __entity = &mut entity;
        let __class__cond_0 = true;
        if let Some(mut __comp) = __entity.get_mut::<bevy::ui::Node>() {
            if __class__cond_0 {
                __comp.display = bevy::ui::Display::Flex;
            }
        }
        __entity
    };
    {
        let mut __entity = &mut entity;
        let __class__cond_0 = true;
        let __class__cond_1 = true;
        if let Some(mut __comp) = __entity.get_mut::<bevy::ui::Node>() {
            if __class__cond_1 {
                __comp.display = bevy::ui::Display::Block;
            } else {
                if __class__cond_0 {
                    __comp.display = bevy::ui::Display::Flex;
                }
            }
        }
        __entity
    };
}
fn nested_with_priority(mut query: Query<EntityMut>) {
    let mut entity = query.single_mut();
    let prio_1lv = {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(0f32),
                right: bevy::ui::Val::Px(4f32),
                bottom: bevy::ui::Val::Px(8f32),
                left: bevy::ui::Val::Px(12f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    let prio_1lv_cod = {
        let __class__cond_0 = true;
        let __class__cond_1 = true;
        let __class__cond_2 = true;
        let __class__cond_3 = true;
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: if __class__cond_0 {
                    bevy::ui::Val::Px(0f32)
                } else {
                    Default::default()
                },
                left: if __class__cond_1 {
                    bevy::ui::Val::Px(4f32)
                } else {
                    Default::default()
                },
                right: if __class__cond_2 {
                    bevy::ui::Val::Px(8f32)
                } else {
                    Default::default()
                },
                bottom: if __class__cond_3 {
                    bevy::ui::Val::Px(12f32)
                } else {
                    Default::default()
                },
                ..Default::default()
            },
            ..Default::default()
        })
    };
    let prio_2lv = {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(8f32),
                right: bevy::ui::Val::Px(4f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    let prio_2lv_cond = {
        let __class__cond_0 = true;
        let __class__cond_1 = true;
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: if __class__cond_0 {
                    bevy::ui::Val::Px(4f32)
                } else {
                    Default::default()
                },
                right: if __class__cond_1 {
                    bevy::ui::Val::Px(8f32)
                } else {
                    if __class__cond_0 {
                        bevy::ui::Val::Px(4f32)
                    } else {
                        Default::default()
                    }
                },
                ..Default::default()
            },
            ..Default::default()
        })
    };
    let prio_2lv_cond_complex = {
        let __class__cond_0 = true;
        let __class__cond_1 = false;
        let __class__cond_2 = false;
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: if __class__cond_1 {
                    bevy::ui::Val::Px(28f32)
                } else {
                    if __class__cond_0 {
                        bevy::ui::Val::Px(24f32)
                    } else {
                        bevy::ui::Val::Px(12f32)
                    }
                },
                right: if __class__cond_0 {
                    bevy::ui::Val::Px(16f32)
                } else {
                    if __class__cond_2 {
                        bevy::ui::Val::Px(32f32)
                    } else {
                        bevy::ui::Val::Px(4f32)
                    }
                },
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        let mut __entity = &mut entity;
        if let Some(mut __comp) = __entity.get_mut::<bevy::ui::Node>() {
            __comp.padding.top = bevy::ui::Val::Px(4f32);
        }
        __entity
    };
    {
        let mut __entity = &mut entity;
        let __class__cond_0 = true;
        if let Some(mut __comp) = __entity.get_mut::<bevy::ui::Node>() {
            if __class__cond_0 {
                __comp.padding.left = bevy::ui::Val::Px(8f32);
            } else {
                __comp.padding.left = bevy::ui::Val::Px(4f32);
            }
        }
        __entity
    };
    {
        let mut __entity = &mut entity;
        let __class__cond_0 = true;
        let __class__cond_1 = true;
        if let Some(mut __comp) = __entity.get_mut::<bevy::ui::Node>() {
            __comp.padding.top = bevy::ui::Val::Px(4f32);
            if __class__cond_1 {
                __comp.padding.right = bevy::ui::Val::Px(12f32);
            } else {
                __comp.padding.right = bevy::ui::Val::Px(4f32);
            }
            __comp.padding.bottom = bevy::ui::Val::Px(4f32);
            if __class__cond_1 {
                __comp.padding.left = bevy::ui::Val::Px(16f32);
            } else {
                if __class__cond_0 {
                    __comp.padding.left = bevy::ui::Val::Px(8f32);
                } else {
                    __comp.padding.left = bevy::ui::Val::Px(4f32);
                }
            }
        }
        __entity
    };
    {
        let mut __entity = &mut entity;
        let __class__cond_0 = true;
        let __class__cond_1 = true;
        let __class__cond_2 = true;
        if let Some(mut __comp) = __entity.get_mut::<bevy::ui::Node>() {
            if __class__cond_2 {
                __comp.padding.top = bevy::ui::Val::Px(20f32);
            } else {
                __comp.padding.top = bevy::ui::Val::Px(4f32);
            }
            if __class__cond_1 {
                __comp.padding.right = bevy::ui::Val::Px(12f32);
            } else {
                if __class__cond_2 {
                    __comp.padding.right = bevy::ui::Val::Px(20f32);
                } else {
                    __comp.padding.right = bevy::ui::Val::Px(4f32);
                }
            }
            if __class__cond_2 {
                __comp.padding.bottom = bevy::ui::Val::Px(20f32);
            } else {
                __comp.padding.bottom = bevy::ui::Val::Px(4f32);
            }
            if __class__cond_1 {
                __comp.padding.left = bevy::ui::Val::Px(16f32);
            } else {
                if __class__cond_0 {
                    __comp.padding.left = bevy::ui::Val::Px(8f32);
                } else {
                    if __class__cond_2 {
                        __comp.padding.left = bevy::ui::Val::Px(20f32);
                    } else {
                        __comp.padding.left = bevy::ui::Val::Px(4f32);
                    }
                }
            }
        }
        __entity
    };
}
fn mutate_component() {
    let node = Node::default();
    {
        let mut __comp = node;
        __comp.width = bevy::ui::Val::Percent(100f32);
        __comp
    };
}
fn picking_style(mut query: Query<EntityMut>) {
    let entity = query.single_mut();
    {
        let __class__cond_0 = true;
        (
            bevy::ui::BackgroundColor {
                0: bevy::color::Color::Srgba(bevy::color::palettes::tailwind::RED_500),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_top: Some(bevy::ui::Val::default()),
                    background_color: Some(
                        bevy::color::Color::Srgba(
                            bevy::color::palettes::tailwind::RED_500,
                        ),
                    ),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    background_color: if __class__cond_0 {
                        Some(
                            bevy::color::Color::Srgba(
                                bevy::color::palettes::tailwind::YELLOW_500,
                            ),
                        )
                    } else {
                        Default::default()
                    },
                    padding_top: if __class__cond_0 {
                        Some(bevy::ui::Val::Px(4f32))
                    } else {
                        Default::default()
                    },
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    background_color: Some(
                        bevy::color::Color::Srgba(
                            bevy::color::palettes::tailwind::GREEN_500,
                        ),
                    ),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
}
fn test_all() {
    {
        (
            bevy::ui::Node {
                aspect_ratio: None,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    aspect_ratio: Some(None),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    aspect_ratio: Some(Some(1.0)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    aspect_ratio: Some(Some(16.0 / 9.0)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            aspect_ratio: Some(1.0),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            aspect_ratio: Some(16.0 / 9.0),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            aspect_ratio: Some(1.5f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            aspect_ratio: Some(0.5),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                display: bevy::ui::Display::Flex,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    display: Some(bevy::ui::Display::Flex),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    display: Some(bevy::ui::Display::Grid),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    display: Some(bevy::ui::Display::Block),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            display: bevy::ui::Display::Grid,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            display: bevy::ui::Display::Block,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            display: bevy::ui::Display::None,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            display: Display::Flex,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: bevy::ui::OverflowAxis::Hidden,
                y: bevy::ui::OverflowAxis::Hidden,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: bevy::ui::OverflowAxis::Clip,
                y: bevy::ui::OverflowAxis::Clip,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: bevy::ui::OverflowAxis::Visible,
                y: bevy::ui::OverflowAxis::Visible,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: bevy::ui::OverflowAxis::Scroll,
                y: bevy::ui::OverflowAxis::Scroll,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: OverflowAxis::Hidden,
                y: OverflowAxis::Hidden,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                overflow: bevy::ui::Overflow {
                    x: bevy::ui::OverflowAxis::Hidden,
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    overflow_x: Some(bevy::ui::OverflowAxis::Hidden),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    overflow_x: Some(bevy::ui::OverflowAxis::Clip),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    overflow_x: Some(bevy::ui::OverflowAxis::Visible),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: bevy::ui::OverflowAxis::Clip,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: bevy::ui::OverflowAxis::Visible,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: bevy::ui::OverflowAxis::Scroll,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                x: OverflowAxis::Hidden,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                overflow: bevy::ui::Overflow {
                    y: bevy::ui::OverflowAxis::Hidden,
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    overflow_y: Some(bevy::ui::OverflowAxis::Hidden),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    overflow_y: Some(bevy::ui::OverflowAxis::Clip),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    overflow_y: Some(bevy::ui::OverflowAxis::Visible),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                y: bevy::ui::OverflowAxis::Clip,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                y: bevy::ui::OverflowAxis::Visible,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                y: bevy::ui::OverflowAxis::Scroll,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            overflow: bevy::ui::Overflow {
                y: OverflowAxis::Hidden,
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                position_type: bevy::ui::PositionType::Relative,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    position: Some(bevy::ui::PositionType::Relative),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    position: Some(bevy::ui::PositionType::Absolute),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    position: Some(bevy::ui::PositionType::Absolute),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            position_type: bevy::ui::PositionType::Absolute,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            position_type: PositionType::Relative,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                top: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    top: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    top: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    top: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            top: bevy::ui::Val::Px(-4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            top: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                right: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    right: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    right: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    right: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            right: bevy::ui::Val::Px(-4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            right: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                bottom: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    bottom: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    bottom: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    bottom: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            bottom: bevy::ui::Val::Px(-4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            bottom: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                left: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    left: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    left: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    left: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            left: bevy::ui::Val::Px(-4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            left: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::ZIndex {
                0: 10i32,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    z_index: Some(10i32),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    z_index: Some(20i32),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    z_index: Some(30i32),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::ZIndex {
            0: -10i32,
            ..Default::default()
        })
    };
    {
        (bevy::ui::ZIndex {
            0: 100,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                flex_basis: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    flex_basis: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    flex_basis: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    flex_basis: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            flex_basis: bevy::ui::Val::Percent(50f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_basis: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                flex_direction: bevy::ui::FlexDirection::Row,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    flex_direction: Some(bevy::ui::FlexDirection::Row),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    flex_direction: Some(bevy::ui::FlexDirection::Column),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    flex_direction: Some(bevy::ui::FlexDirection::Column),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            flex_direction: bevy::ui::FlexDirection::RowReverse,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_direction: bevy::ui::FlexDirection::Column,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_direction: bevy::ui::FlexDirection::ColumnReverse,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_direction: FlexDirection::Row,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                flex_wrap: bevy::ui::FlexWrap::Wrap,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    flex_wrap: Some(bevy::ui::FlexWrap::Wrap),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    flex_wrap: Some(bevy::ui::FlexWrap::WrapReverse),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    flex_wrap: Some(bevy::ui::FlexWrap::NoWrap),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            flex_wrap: bevy::ui::FlexWrap::WrapReverse,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_wrap: bevy::ui::FlexWrap::NoWrap,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_wrap: FlexWrap::Wrap,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_grow: 1f32,
            flex_shrink: 1f32,
            flex_basis: bevy::ui::Val::Percent(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_grow: 1f32,
            flex_shrink: 1f32,
            flex_basis: bevy::ui::Val::Auto,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_grow: 0f32,
            flex_shrink: 1f32,
            flex_basis: bevy::ui::Val::Auto,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_grow: 0f32,
            flex_shrink: 0f32,
            flex_basis: bevy::ui::Val::Auto,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                flex_grow: 1f32,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    flex_grow: Some(1f32),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    flex_grow: Some(0f32),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    flex_grow: Some(1f32),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            flex_grow: 1f32,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_grow: 0f32,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_grow: 0f32,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_grow: 1.0,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_grow: 1.0,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                flex_shrink: 1f32,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    flex_shrink: Some(1f32),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    flex_shrink: Some(0f32),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    flex_shrink: Some(1f32),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            flex_shrink: 1f32,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_shrink: 0f32,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_shrink: 0f32,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_shrink: 1.0,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            flex_shrink: 1.0,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                grid_template_columns: bevy::ui::RepeatedGridTrack::minmax(
                    1u16,
                    bevy::ui::MinTrackSizingFunction::Px(0.),
                    bevy::ui::MaxTrackSizingFunction::Fraction(1.),
                ),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    grid_template_columns: Some(
                        bevy::ui::RepeatedGridTrack::minmax(
                            1u16,
                            bevy::ui::MinTrackSizingFunction::Px(0.),
                            bevy::ui::MaxTrackSizingFunction::Fraction(1.),
                        ),
                    ),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    grid_template_columns: Some(
                        bevy::ui::RepeatedGridTrack::minmax(
                            2u16,
                            bevy::ui::MinTrackSizingFunction::Px(0.),
                            bevy::ui::MaxTrackSizingFunction::Fraction(1.),
                        ),
                    ),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    grid_template_columns: Some(
                        bevy::ui::RepeatedGridTrack::minmax(
                            3u16,
                            bevy::ui::MinTrackSizingFunction::Px(0.),
                            bevy::ui::MaxTrackSizingFunction::Fraction(1.),
                        ),
                    ),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            grid_template_columns: Default::default(),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_template_columns: GridTrack::fr(1.0),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_column: bevy::ui::GridPlacement::default().set_span(1u16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_column: bevy::ui::GridPlacement::default().set_span(1u16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_column: bevy::ui::GridPlacement::default()
                .set_start(1i16)
                .set_end(-1i16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_column: bevy::ui::GridPlacement::default().set_start(1i16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_column: bevy::ui::GridPlacement::default().set_start(1i16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_column: bevy::ui::GridPlacement::default().set_end(1i16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_column: bevy::ui::GridPlacement::default().set_end(1i16),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                grid_template_rows: bevy::ui::RepeatedGridTrack::minmax(
                    1u16,
                    bevy::ui::MinTrackSizingFunction::Px(0.),
                    bevy::ui::MaxTrackSizingFunction::Fraction(1.),
                ),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    grid_template_rows: Some(
                        bevy::ui::RepeatedGridTrack::minmax(
                            1u16,
                            bevy::ui::MinTrackSizingFunction::Px(0.),
                            bevy::ui::MaxTrackSizingFunction::Fraction(1.),
                        ),
                    ),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    grid_template_rows: Some(
                        bevy::ui::RepeatedGridTrack::minmax(
                            2u16,
                            bevy::ui::MinTrackSizingFunction::Px(0.),
                            bevy::ui::MaxTrackSizingFunction::Fraction(1.),
                        ),
                    ),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    grid_template_rows: Some(
                        bevy::ui::RepeatedGridTrack::minmax(
                            3u16,
                            bevy::ui::MinTrackSizingFunction::Px(0.),
                            bevy::ui::MaxTrackSizingFunction::Fraction(1.),
                        ),
                    ),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            grid_template_rows: Default::default(),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_template_rows: GridTrack::fr(1.0),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_row: bevy::ui::GridPlacement::default().set_span(1u16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_row: bevy::ui::GridPlacement::default().set_span(1u16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_row: bevy::ui::GridPlacement::default().set_start(1i16).set_end(-1i16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_row: bevy::ui::GridPlacement::default().set_start(1i16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_row: bevy::ui::GridPlacement::default().set_start(1i16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_row: bevy::ui::GridPlacement::default().set_end(1i16),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_row: bevy::ui::GridPlacement::default().set_end(1i16),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                grid_auto_flow: bevy::ui::GridAutoFlow::Row,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    grid_auto_flow: Some(bevy::ui::GridAutoFlow::Row),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    grid_auto_flow: Some(bevy::ui::GridAutoFlow::Column),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    grid_auto_flow: Some(bevy::ui::GridAutoFlow::RowDense),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            grid_auto_flow: bevy::ui::GridAutoFlow::Column,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_flow: bevy::ui::GridAutoFlow::RowDense,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_flow: bevy::ui::GridAutoFlow::ColumnDense,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_flow: GridAutoFlow::Row,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                grid_auto_columns: bevy::ui::GridTrack::auto(),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    grid_auto_columns: Some(bevy::ui::GridTrack::auto()),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    grid_auto_columns: Some(bevy::ui::GridTrack::min_content()),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    grid_auto_columns: Some(bevy::ui::GridTrack::max_content()),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            grid_auto_columns: bevy::ui::GridTrack::min_content(),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_columns: bevy::ui::GridTrack::max_content(),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_columns: bevy::ui::GridTrack::flex(1.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_columns: GridTrack::fr(1.0),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                grid_auto_rows: bevy::ui::GridTrack::auto(),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    grid_auto_rows: Some(bevy::ui::GridTrack::auto()),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    grid_auto_rows: Some(bevy::ui::GridTrack::min_content()),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    grid_auto_rows: Some(bevy::ui::GridTrack::max_content()),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            grid_auto_rows: bevy::ui::GridTrack::min_content(),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_rows: bevy::ui::GridTrack::max_content(),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_rows: bevy::ui::GridTrack::flex(1.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            grid_auto_rows: GridTrack::fr(1.0),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            row_gap: bevy::ui::Val::Px(0f32),
            column_gap: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            row_gap: Val::Px(10.),
            column_gap: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                column_gap: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    column_gap: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    column_gap: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    column_gap: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            column_gap: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                row_gap: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    row_gap: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    row_gap: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    row_gap: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            row_gap: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            row_gap: bevy::ui::Val::Px(1f32),
            column_gap: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            column_gap: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            row_gap: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            row_gap: bevy::ui::Val::Px(6f32),
            column_gap: bevy::ui::Val::Px(6f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            column_gap: bevy::ui::Val::Px(6f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            row_gap: bevy::ui::Val::Px(6f32),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                justify_content: bevy::ui::JustifyContent::Default,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    justify_content: Some(bevy::ui::JustifyContent::Default),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    justify_content: Some(bevy::ui::JustifyContent::FlexStart),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    justify_content: Some(bevy::ui::JustifyContent::FlexEnd),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            justify_content: bevy::ui::JustifyContent::FlexStart,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_content: bevy::ui::JustifyContent::FlexEnd,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_content: bevy::ui::JustifyContent::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_content: bevy::ui::JustifyContent::SpaceBetween,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_content: bevy::ui::JustifyContent::SpaceAround,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_content: bevy::ui::JustifyContent::SpaceEvenly,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_content: bevy::ui::JustifyContent::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_content: JustifyContent::Center,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                justify_items: bevy::ui::JustifyItems::Start,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    justify_items: Some(bevy::ui::JustifyItems::Start),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    justify_items: Some(bevy::ui::JustifyItems::End),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    justify_items: Some(bevy::ui::JustifyItems::Center),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            justify_items: bevy::ui::JustifyItems::End,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_items: bevy::ui::JustifyItems::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_items: bevy::ui::JustifyItems::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_items: JustifyItems::Center,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                justify_self: bevy::ui::JustifySelf::Auto,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    justify_self: Some(bevy::ui::JustifySelf::Auto),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    justify_self: Some(bevy::ui::JustifySelf::Start),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    justify_self: Some(bevy::ui::JustifySelf::End),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            justify_self: bevy::ui::JustifySelf::Start,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_self: bevy::ui::JustifySelf::End,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_self: bevy::ui::JustifySelf::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            justify_self: JustifySelf::Center,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                align_content: bevy::ui::AlignContent::Default,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    align_content: Some(bevy::ui::AlignContent::Default),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    align_content: Some(bevy::ui::AlignContent::Center),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    align_content: Some(bevy::ui::AlignContent::FlexStart),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::FlexStart,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::FlexEnd,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::SpaceBetween,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::SpaceAround,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::SpaceEvenly,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: AlignContent::Center,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                align_items: bevy::ui::AlignItems::FlexStart,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    align_items: Some(bevy::ui::AlignItems::FlexStart),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    align_items: Some(bevy::ui::AlignItems::FlexEnd),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    align_items: Some(bevy::ui::AlignItems::Center),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::FlexEnd,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::Baseline,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: AlignItems::Center,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                align_self: bevy::ui::AlignSelf::Auto,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    align_self: Some(bevy::ui::AlignSelf::Auto),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    align_self: Some(bevy::ui::AlignSelf::FlexStart),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    align_self: Some(bevy::ui::AlignSelf::FlexEnd),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::FlexStart,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::FlexEnd,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::Baseline,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: AlignSelf::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::Center,
            justify_content: bevy::ui::JustifyContent::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::Start,
            justify_content: bevy::ui::JustifyContent::Start,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::End,
            justify_content: bevy::ui::JustifyContent::End,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::SpaceBetween,
            justify_content: bevy::ui::JustifyContent::SpaceBetween,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::SpaceAround,
            justify_content: bevy::ui::JustifyContent::SpaceAround,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::SpaceEvenly,
            justify_content: bevy::ui::JustifyContent::SpaceEvenly,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::Stretch,
            justify_content: bevy::ui::JustifyContent::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_content: bevy::ui::AlignContent::Stretch,
            justify_content: bevy::ui::JustifyContent::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::Start,
            justify_items: bevy::ui::JustifyItems::Start,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::End,
            justify_items: bevy::ui::JustifyItems::End,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::Center,
            justify_items: bevy::ui::JustifyItems::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::Baseline,
            justify_items: bevy::ui::JustifyItems::Baseline,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_items: bevy::ui::AlignItems::Stretch,
            justify_items: bevy::ui::JustifyItems::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::Auto,
            justify_self: bevy::ui::JustifySelf::Auto,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::Start,
            justify_self: bevy::ui::JustifySelf::Start,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::End,
            justify_self: bevy::ui::JustifySelf::End,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::Center,
            justify_self: bevy::ui::JustifySelf::Center,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            align_self: bevy::ui::AlignSelf::Stretch,
            justify_self: bevy::ui::JustifySelf::Stretch,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(0f32),
                right: bevy::ui::Val::Px(0f32),
                bottom: bevy::ui::Val::Px(0f32),
                left: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: Val::Px(10.),
                right: Val::Px(10.),
                bottom: Val::Px(10.),
                left: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(0f32),
                right: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: Val::Px(10.),
                right: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(0f32),
                bottom: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: Val::Px(10.),
                bottom: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                padding: bevy::ui::UiRect {
                    top: bevy::ui::Val::Px(0f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_top: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    padding_top: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    padding_top: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                padding: bevy::ui::UiRect {
                    top: Val::Px(10.),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_top: Some(Val::Px(10.)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    padding_top: Some(Val::Px(20.)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    padding_top: Some(Val::Px(30.)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                padding: bevy::ui::UiRect {
                    right: bevy::ui::Val::Px(0f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_right: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    padding_right: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    padding_right: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                padding: bevy::ui::UiRect {
                    right: Val::Px(10.),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_right: Some(Val::Px(10.)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    padding_right: Some(Val::Px(20.)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    padding_right: Some(Val::Px(30.)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                padding: bevy::ui::UiRect {
                    bottom: bevy::ui::Val::Px(0f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_bottom: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    padding_bottom: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    padding_bottom: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                padding: bevy::ui::UiRect {
                    bottom: Val::Px(10.),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_bottom: Some(Val::Px(10.)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    padding_bottom: Some(Val::Px(20.)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    padding_bottom: Some(Val::Px(30.)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                padding: bevy::ui::UiRect {
                    left: bevy::ui::Val::Px(0f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_left: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    padding_left: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    padding_left: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                padding: bevy::ui::UiRect {
                    left: Val::Px(10.),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    padding_left: Some(Val::Px(10.)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    padding_left: Some(Val::Px(20.)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    padding_left: Some(Val::Px(30.)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(1f32),
                right: bevy::ui::Val::Px(1f32),
                bottom: bevy::ui::Val::Px(1f32),
                left: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(1f32),
                right: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(1f32),
                bottom: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                right: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                bottom: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(6f32),
                right: bevy::ui::Val::Px(6f32),
                bottom: bevy::ui::Val::Px(6f32),
                left: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(6f32),
                right: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(6f32),
                bottom: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                right: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                bottom: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            padding: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(0f32),
                right: bevy::ui::Val::Px(0f32),
                bottom: bevy::ui::Val::Px(0f32),
                left: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: Val::Px(10.),
                right: Val::Px(10.),
                bottom: Val::Px(10.),
                left: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(0f32),
                right: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                left: Val::Px(10.),
                right: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(0f32),
                bottom: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: Val::Px(10.),
                bottom: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                margin: bevy::ui::UiRect {
                    top: bevy::ui::Val::Px(0f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    margin_top: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    margin_top: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    margin_top: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                margin: bevy::ui::UiRect {
                    top: Val::Px(10.),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    margin_top: Some(Val::Px(10.)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    margin_top: Some(Val::Px(20.)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    margin_top: Some(Val::Px(30.)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                margin: bevy::ui::UiRect {
                    right: bevy::ui::Val::Px(0f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    margin_right: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    margin_right: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    margin_right: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                margin: bevy::ui::UiRect {
                    right: Val::Px(10.),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    margin_right: Some(Val::Px(10.)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    margin_right: Some(Val::Px(20.)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    margin_right: Some(Val::Px(30.)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                margin: bevy::ui::UiRect {
                    bottom: bevy::ui::Val::Px(0f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    margin_bottom: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    margin_bottom: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    margin_bottom: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                margin: bevy::ui::UiRect {
                    bottom: Val::Px(10.),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    margin_bottom: Some(Val::Px(10.)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    margin_bottom: Some(Val::Px(20.)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    margin_bottom: Some(Val::Px(30.)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                margin: bevy::ui::UiRect {
                    left: bevy::ui::Val::Px(0f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    margin_left: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    margin_left: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    margin_left: Some(bevy::ui::Val::Px(8f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Node {
                margin: bevy::ui::UiRect {
                    left: Val::Px(10.),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    margin_left: Some(Val::Px(10.)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    margin_left: Some(Val::Px(20.)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    margin_left: Some(Val::Px(30.)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(1f32),
                right: bevy::ui::Val::Px(1f32),
                bottom: bevy::ui::Val::Px(1f32),
                left: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(1f32),
                right: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(1f32),
                bottom: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                right: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                bottom: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(6f32),
                right: bevy::ui::Val::Px(6f32),
                bottom: bevy::ui::Val::Px(6f32),
                left: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(6f32),
                right: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(6f32),
                bottom: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                right: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                bottom: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            margin: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(6f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                width: bevy::ui::Val::Auto,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    width: Some(bevy::ui::Val::Auto),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    width: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    width: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Percent(50f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Percent(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Vw(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::VMin(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::VMax(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                min_width: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    min_width: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    min_width: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    min_width: Some(bevy::ui::Val::Px(1f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            min_width: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            min_width: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            min_width: bevy::ui::Val::Percent(50f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            min_width: bevy::ui::Val::Percent(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            min_width: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                max_width: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    max_width: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    max_width: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    max_width: Some(bevy::ui::Val::Px(1f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            max_width: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            max_width: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            max_width: bevy::ui::Val::Percent(50f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            max_width: bevy::ui::Val::Percent(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            max_width: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                height: bevy::ui::Val::Auto,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    height: Some(bevy::ui::Val::Auto),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    height: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    height: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            height: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            height: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            height: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            height: bevy::ui::Val::Percent(50f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            height: bevy::ui::Val::Percent(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            height: bevy::ui::Val::Vh(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            height: bevy::ui::Val::VMin(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            height: bevy::ui::Val::VMax(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            height: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                min_height: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    min_height: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    min_height: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    min_height: Some(bevy::ui::Val::Px(1f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            min_height: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            min_height: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            min_height: bevy::ui::Val::Percent(50f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            min_height: bevy::ui::Val::Percent(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            min_height: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                max_height: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    max_height: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    max_height: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    max_height: Some(bevy::ui::Val::Px(1f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            max_height: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            max_height: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            max_height: bevy::ui::Val::Percent(50f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            max_height: bevy::ui::Val::Percent(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            max_height: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Px(0f32),
            height: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Px(2f32),
            height: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Px(1f32),
            height: bevy::ui::Val::Px(1f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Percent(50f32),
            height: bevy::ui::Val::Percent(50f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: bevy::ui::Val::Percent(100f32),
            height: bevy::ui::Val::Percent(100f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            width: Val::Px(10.),
            height: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::text::TextFont {
                font_size: 12f32,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    font_size: Some(12f32),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    font_size: Some(14f32),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    font_size: Some(16f32),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::text::TextFont {
            font_size: 14f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 16f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 18f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 20f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 24f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 30f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 36f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 48f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 64f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 80f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 96f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_size: 128f32,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextFont {
            font_smoothing: bevy::text::FontSmoothing::AntiAliased,
            ..Default::default()
        })
    };
    {
        (
            bevy::text::TextLayout {
                justify: bevy::text::JustifyText::Left,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    text_justity: Some(bevy::text::JustifyText::Left),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    text_justity: Some(bevy::text::JustifyText::Center),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    text_justity: Some(bevy::text::JustifyText::Right),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::text::TextLayout {
            justify: bevy::text::JustifyText::Center,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextLayout {
            justify: bevy::text::JustifyText::Right,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextLayout {
            justify: bevy::text::JustifyText::Justified,
            ..Default::default()
        })
    };
    {
        (
            bevy::text::TextColor {
                0: bevy::color::Color::NONE,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    text_color: Some(bevy::color::Color::NONE),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    text_color: Some(
                        <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                            &bevy::color::Color::NONE,
                            0.5f32,
                        ),
                    ),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    text_color: Some(bevy::color::Color::BLACK),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::text::TextColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::NONE,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::text::TextColor {
            0: bevy::color::Color::BLACK,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::BLACK,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::text::TextColor {
            0: bevy::color::Color::WHITE,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::WHITE,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::text::TextColor {
            0: bevy::color::Color::Srgba(bevy::color::palettes::tailwind::GRAY_100),
            ..Default::default()
        })
    };
    {
        (bevy::text::TextColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::Srgba(bevy::color::palettes::tailwind::GRAY_100),
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (
            bevy::text::TextLayout {
                linebreak: bevy::text::LineBreak::WordBoundary,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    text_linebreak: Some(bevy::text::LineBreak::WordBoundary),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    text_linebreak: Some(bevy::text::LineBreak::AnyCharacter),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    text_linebreak: Some(bevy::text::LineBreak::AnyCharacter),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::text::TextLayout {
            linebreak: bevy::text::LineBreak::AnyCharacter,
            ..Default::default()
        })
    };
    {
        (bevy::text::TextLayout {
            linebreak: LineBreak::NoWrap,
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::BackgroundColor {
                0: bevy::color::Color::NONE,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    background_color: Some(bevy::color::Color::NONE),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    background_color: Some(bevy::color::Color::BLACK),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    background_color: Some(bevy::color::Color::WHITE),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::BackgroundColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::NONE,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BackgroundColor {
            0: bevy::color::Color::BLACK,
            ..Default::default()
        })
    };
    {
        (bevy::ui::BackgroundColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::BLACK,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BackgroundColor {
            0: bevy::color::Color::WHITE,
            ..Default::default()
        })
    };
    {
        (bevy::ui::BackgroundColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::WHITE,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BackgroundColor {
            0: bevy::color::Color::Srgba(bevy::color::palettes::tailwind::GRAY_100),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BackgroundColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::Srgba(bevy::color::palettes::tailwind::GRAY_100),
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BackgroundColor {
            0: Color::WHITE,
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(0f32),
            top_right: bevy::ui::Val::Px(0f32),
            bottom_left: bevy::ui::Val::Px(0f32),
            bottom_right: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(2f32),
            top_right: bevy::ui::Val::Px(2f32),
            bottom_left: bevy::ui::Val::Px(2f32),
            bottom_right: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(4f32),
            top_right: bevy::ui::Val::Px(4f32),
            bottom_left: bevy::ui::Val::Px(4f32),
            bottom_right: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: Val::Px(10.),
            top_right: Val::Px(10.),
            bottom_right: Val::Px(10.),
            bottom_left: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(9999f32),
            top_right: bevy::ui::Val::Px(9999f32),
            bottom_left: bevy::ui::Val::Px(9999f32),
            bottom_right: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(0f32),
            top_right: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(2f32),
            top_right: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(4f32),
            top_right: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(9999f32),
            top_right: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: Val::Px(10.),
            top_right: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: bevy::ui::Val::Px(0f32),
            bottom_right: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: bevy::ui::Val::Px(2f32),
            bottom_right: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: bevy::ui::Val::Px(4f32),
            bottom_right: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: bevy::ui::Val::Px(9999f32),
            bottom_right: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: Val::Px(10.),
            bottom_right: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: bevy::ui::Val::Px(0f32),
            bottom_left: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: bevy::ui::Val::Px(2f32),
            bottom_left: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: bevy::ui::Val::Px(4f32),
            bottom_left: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: bevy::ui::Val::Px(9999f32),
            bottom_left: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: Val::Px(10.),
            bottom_left: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: bevy::ui::Val::Px(0f32),
            top_left: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: bevy::ui::Val::Px(2f32),
            top_left: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: bevy::ui::Val::Px(4f32),
            top_left: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: bevy::ui::Val::Px(9999f32),
            top_left: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: Val::Px(10.),
            top_left: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::BorderRadius {
                top_left: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    border_radius_tl: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    border_radius_tl: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    border_radius_tl: Some(bevy::ui::Val::Px(4f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_left: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            top_right: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_right: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: bevy::ui::Val::Px(0f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: bevy::ui::Val::Px(2f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: bevy::ui::Val::Px(4f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: bevy::ui::Val::Px(9999f32),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderRadius {
            bottom_left: Val::Px(10.),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(0f32),
                right: bevy::ui::Val::Px(0f32),
                bottom: bevy::ui::Val::Px(0f32),
                left: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(1f32),
                right: bevy::ui::Val::Px(1f32),
                bottom: bevy::ui::Val::Px(1f32),
                left: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                top: Val::Px(10.),
                right: Val::Px(10.),
                bottom: Val::Px(10.),
                left: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(0f32),
                right: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(1f32),
                right: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                left: Val::Px(10.),
                right: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(0f32),
                bottom: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(1f32),
                bottom: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                top: Val::Px(10.),
                bottom: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                top: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Node {
                border: bevy::ui::UiRect {
                    top: bevy::ui::Val::Px(1f32),
                    ..Default::default()
                },
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    border_top: Some(bevy::ui::Val::Px(1f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    border_top: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    border_top: Some(bevy::ui::Val::Px(3f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                top: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                right: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                right: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                right: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                bottom: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                bottom: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                bottom: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                left: bevy::ui::Val::Px(1f32),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (bevy::ui::Node {
            border: bevy::ui::UiRect {
                left: Val::Px(10.),
                ..Default::default()
            },
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::BorderColor {
                0: bevy::color::Color::NONE,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    border_color: Some(bevy::color::Color::NONE),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    border_color: Some(bevy::color::Color::BLACK),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    border_color: Some(bevy::color::Color::WHITE),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::BorderColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::NONE,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderColor {
            0: bevy::color::Color::BLACK,
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::BLACK,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderColor {
            0: bevy::color::Color::WHITE,
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::WHITE,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderColor {
            0: bevy::color::Color::Srgba(bevy::color::palettes::tailwind::GRAY_100),
            ..Default::default()
        })
    };
    {
        (bevy::ui::BorderColor {
            0: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::Srgba(bevy::color::palettes::tailwind::GRAY_100),
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Outline {
                width: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    outline_width: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    outline_width: Some(bevy::ui::Val::Px(1f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    outline_width: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (
            bevy::ui::Outline {
                color: bevy::color::Color::NONE,
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    outline_color: Some(bevy::color::Color::NONE),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    outline_color: Some(bevy::color::Color::BLACK),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    outline_color: Some(bevy::color::Color::WHITE),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
    {
        (bevy::ui::Outline {
            color: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::NONE,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Outline {
            color: bevy::color::Color::BLACK,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Outline {
            color: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::BLACK,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Outline {
            color: bevy::color::Color::WHITE,
            ..Default::default()
        })
    };
    {
        (bevy::ui::Outline {
            color: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::WHITE,
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (bevy::ui::Outline {
            color: <bevy::color::Color as bevy::color::Alpha>::with_alpha(
                &bevy::color::Color::Srgba(bevy::color::palettes::tailwind::GRAY_100),
                0.5f32,
            ),
            ..Default::default()
        })
    };
    {
        (
            bevy::ui::Outline {
                offset: bevy::ui::Val::Px(0f32),
                ..Default::default()
            },
            bevy_tailwind::PickingStyles {
                base: bevy_tailwind::PickingStyle {
                    outline_offset: Some(bevy::ui::Val::Px(0f32)),
                    ..Default::default()
                },
                hover: bevy_tailwind::PickingStyle {
                    outline_offset: Some(bevy::ui::Val::Px(1f32)),
                    ..Default::default()
                },
                focus: bevy_tailwind::PickingStyle {
                    outline_offset: Some(bevy::ui::Val::Px(2f32)),
                    ..Default::default()
                },
                ..Default::default()
            },
        )
    };
}
